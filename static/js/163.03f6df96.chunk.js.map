{"version":3,"file":"static/js/163.03f6df96.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/clsx/dist/clsx.m.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactsListItem/ContactsListItem.module.css?e52b","components/ContactsListItem/ContactsListItem.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactList.module.css?ae34","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"phonebook__formContact\":\"ContactForm_phonebook__formContact__1n7wl\",\"phonebook__formContactLabel\":\"ContactForm_phonebook__formContactLabel__58UKO\",\"phonebook__formContactInput\":\"ContactForm_phonebook__formContactInput__ADocP\",\"form__button\":\"ContactForm_form__button__MT1Jk\"};","//Чтобы потом легче было в одном месте поменять, если изменился state\nexport const getContactsState = state => state.contacts.contacts;\nexport const getIsLoading = state=> state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilterState = state => state.filter.value;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from \"redux/contacts/operations\";\nimport {getContactsState} from 'redux/contacts/selectors';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const dispatch = useDispatch();\n    const stateContacts=useSelector(getContactsState);\n\n    const handleChange = evt => {\n        const { name, value } = evt.target;\n    \n        switch (name) {\n          case 'name':\n            setName(value);\n            break;\n    \n          case 'number':\n            setNumber(value);\n            break;\n    \n          default:\n            console.warn(`Тип поля name - ${name} не обрабатывается`);\n        }\n      };\n\n\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n\n        addContacts(name, number);\n\n        setName('');\n        setNumber('');\n    };\n \n\n    const addContacts = (name, number)=> {  \n        const normalizedName = name.toLowerCase();\n        \n        const isInContacts=stateContacts.findIndex(({name})=>name.toLowerCase()===normalizedName );\n    \n        if(isInContacts!==-1){\n          toast.error(`${name} is already in contacts`);\n        }\n        else{\n          const newContact={\n            name:name,\n            number:number,\n          }\n          dispatch(addContact(newContact));\n        }\n       \n    \n      };\n   \n    return(\n      <>\n        <form onSubmit={handleSubmit} className={css.phonebook__formContact}>\n            <label className={css.phonebook__formContactLabel}>Name</label>\n            <input\n                type=\"name\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n                onChange={handleChange}\n                className={css.phonebook__formContactInput}\n                />\n            \n            <label className={css.phonebook__formContactLabel}>Number</label>\n            <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"^[0-9]+$\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                value={number}\n                onChange={handleChange}\n                className={css.phonebook__formContactInput}\n                />\n            \n            <button type=\"submit\" className={css.form__button}>\n            Add contact\n            </button>\n        </form>\n        <ToastContainer autoClose=\"3000\" theme=\"colored\"/>\n        </>\n    \n    );\n\n\n    \n}\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem__contactThumb\":\"ContactsListItem_contactListItem__contactThumb__gyDOt\",\"contactListItem__button\":\"ContactsListItem_contactListItem__button__FNzGF\"};","import PropTypes from 'prop-types';\nimport css from './ContactsListItem.module.css';\nimport { useDispatch } from \"react-redux\";\nimport {deleteContact} from 'redux/contacts/operations';\n\nconst ContactsListItem = ({contact:{id, name, number}}) => {\n\n    const dispatch = useDispatch();\n\n    const handleDeleteContact = () => dispatch(deleteContact(id));\n\n    return (\n        <>\n        <div className={css.contactListItem__contactThumb}>\n            <p>{name}: </p>\n            <p>{number}</p>\n        </div>\n        <button\n        type=\"button\"\n        onClick={handleDeleteContact}\n        className={css.contactListItem__button}\n        >\n        Delete\n        </button>\n        </>\n    );                  \n};\n\nContactsListItem.propTypes={\n    contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        name:  PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }).isRequired,\n    ),\n\n}; \n\nexport default ContactsListItem;","// extracted by mini-css-extract-plugin\nexport default {\"contactList__title\":\"ContactList_contactList__title__E15m2\",\"contactList__list\":\"ContactList_contactList__list__L6B7x\",\"contactList__item\":\"ContactList_contactList__item__w7IDj\"};","import ContactsListItem from '../ContactsListItem/ContactsListItem';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport {getContactsState, getFilterState} from '../../redux/contacts/selectors';\n\nconst ContactsList = ()=>{\n\n    const stateContacts=useSelector(getContactsState);\n    const stateFilter=useSelector(getFilterState);\n\n    const getVisibleContacts = () => {\n      const normalizedFilter = stateFilter.toLowerCase();\n\n      return stateContacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      );\n    };\n  \n   const visibleContacts = getVisibleContacts();\n\n\n    return (\n        <>\n        <h2 className={css.contactList__title}>Contacts</h2>\n        <ul className={css.contactList__list}>\n            {visibleContacts.map(contact=>(\n                <li key={contact.id} className={css.contactList__item}>\n                    <ContactsListItem contact={contact}/>\n                </li>\n            \n            ))}\n        </ul>\n        </>\n    )\n};\n\nexport default ContactsList;\n ","// extracted by mini-css-extract-plugin\nexport default {\"filter__input\":\"Filter_filter__input__toa89\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {setContactsFilter} from '../../redux/contacts/filterSlice';\nimport {getFilterState} from '../../redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const stateFilter = useSelector(getFilterState);\n\n  const changeFilter = (e) => {\n    dispatch(setContactsFilter(e.currentTarget.value));\n    \n  };\n\n  return (\n    <>\n      <label className={css.filter__label}>Find contacts by name </label>\n      <input type=\"text\" value={stateFilter} placeholder='search...' onChange={changeFilter} className={css.filter__input}/>\n    \n    </>\n  );\n}\n\nexport default Filter;\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactsList />\n    </>\n  );\n}\n\n\n//   <>\n  //   <Container>\n  //     <h1 className={css.phonebook__title}>Phonebook</h1>\n  //     <ContactForm />\n  //     <Filter/>\n  //     <ContactsList/>\n  //   </Container>\n  //   </>\n  // );"],"names":["getContactsState","state","contacts","getIsLoading","isLoading","getFilterState","filter","value","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","r","e","t","f","n","Array","isArray","arguments","useState","name","setName","number","setNumber","dispatch","useDispatch","stateContacts","useSelector","handleChange","evt","console","warn","addContacts","normalizedName","toLowerCase","findIndex","toast","newContact","addContact","onSubmit","preventDefault","className","css","type","pattern","title","required","onChange","autoClose","theme","contact","id","onClick","deleteContact","stateFilter","visibleContacts","normalizedFilter","includes","getVisibleContacts","map","placeholder","setContactsFilter","currentTarget","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}