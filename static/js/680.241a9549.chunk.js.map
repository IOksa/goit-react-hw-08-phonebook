{"version":3,"file":"static/js/680.241a9549.chunk.js","mappings":"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","sources":["components/Spinner/RotatingLinesSpinner.js","webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://react-homework-template/./src/components/ContactsListItem/ContactsListItem.module.css?e52b","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/EditContactForm.jsx","webpack://react-homework-template/./src/components/ButtonClose/ButtonClose.module.css?ef1a","images/icons.svg","components/ButtonClose/ButtonClose.js","components/ContactsListItem/ContactsListItem.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactList.module.css?ae34","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","components/ContactForm/AddContactForm.jsx","webpack://react-homework-template/./src/components/ButtonModalAddContact/ButtonModalAddContact.module.css?ca74","components/ButtonModalAddContact/ButtonModalAddContact.js","components/Spinner/CircleSpinner.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\n\nexport const RotatingLinesSpinner=()=>{\n  return (\n    <RotatingLines\n    strokeColor=\"#0b5394\"\n    strokeWidth=\"5\"\n    animationDuration=\"0.75\"\n    width=\"35\"\n    visible={true}\n  />\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import css from './Container.module.css';\n\nconst Container = ({children }) => <section className={css.container}>{children}</section>;  \nexport default Container;","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem__contactThumb\":\"ContactsListItem_contactListItem__contactThumb__gyDOt\",\"contactListItem__button\":\"ContactsListItem_contactListItem__button__FNzGF\"};","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Modal_Overlay__yoxbg\",\"Modal\":\"Modal_Modal__I1UYJ\"};","import {createPortal} from 'react-dom';\nimport PropTypes from 'prop-types';\nimport css from './Modal.module.css';\n\nconst Modal=({children, onCloseModal})=>{\n    return createPortal(\n        <div className={css.Overlay} \n        \n            //закрытие модалки по клику на бекдроп\n             onClick={(event) =>{\n                if (event.currentTarget === event.target) {\n                    onCloseModal();\n\n                }}}>\n\n            <div className={css.Modal}>{children}\n              \n            </div>\n        </div>,\n        document.querySelector(\"#popup-root\")\n    );\n};\n\n\n\n\nexport default Modal;\n\n\nModal.propTypes={\n \n    onCloseModal: PropTypes.func.isRequired,\n\n}; \n\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook__formContact\":\"ContactForm_phonebook__formContact__1n7wl\",\"phonebook__formContactLabel\":\"ContactForm_phonebook__formContactLabel__58UKO\",\"phonebook__formContactInput\":\"ContactForm_phonebook__formContactInput__ADocP\",\"buttonWrap\":\"ContactForm_buttonWrap__0ZCH-\",\"form__button\":\"ContactForm_form__button__MT1Jk\"};","//Чтобы потом легче было в одном месте поменять, если изменился state\nexport const selectContactsState = state => state.contacts.contacts;\nexport const selectIsLoading = state=> state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsAdding = state => state.contacts.isAdding;\n\nexport const selectFilterState = state => state.filter.value;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { editContact } from \"redux/contacts/operations\";\nimport {selectContactsState} from 'redux/contacts/selectors';\nimport toast from 'react-hot-toast';\nimport {RotatingLinesSpinner} from '../Spinner/RotatingLinesSpinner';\n \n\nconst EditContactForm = ({currentId, currentName, currentNumber, onCloseModal}) => {\n    const [name, setName] = useState(currentName);\n    const [number, setNumber] = useState(currentNumber);\n    const [isAdd, setIsAdd]=useState(false);\n\n    const dispatch = useDispatch();\n    const stateContacts=useSelector(selectContactsState);\n\n    const handleChange = evt => {\n        const { name, value } = evt.target;\n    \n        switch (name) {\n          case 'name':\n            setName(value);\n            break;\n    \n          case 'number':\n            setNumber(value);\n            break;\n    \n          default:\n            console.warn(`Тип поля name - ${name} не обрабатывается`);\n        }\n      };\n\n\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n        setIsAdd(true);\n        addContacts(name, number);\n        setIsAdd(false);\n    \n    };\n \n\n    const addContacts = (name, number)=> {  \n      const normalizedName = name.toLowerCase();\n      \n      const isInContacts=stateContacts.findIndex(({name})=>name.toLowerCase()===normalizedName );\n   \n      if(isInContacts!==-1){\n        toast.error(`${name} is already in contacts`, {duration: 3000, position: 'top-center'});\n       \n      }\n      else{\n        const newContact={\n          name:name,\n          number:number,\n        }\n        dispatch(editContact({currentId,newContact}));\n        onCloseModal();\n      }\n     \n  \n    };\n   \n    return(\n      <>\n        <form onSubmit={handleSubmit} className={css.phonebook__formContact}>\n            <label className={css.phonebook__formContactLabel}>Name</label>\n            <input\n                type=\"name\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n              \n                defaultValue={currentName}\n                onChange={handleChange}\n                className={css.phonebook__formContactInput}\n                />\n            \n            <label className={css.phonebook__formContactLabel}>Number</label>\n            <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"^[0-9]+$\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n               \n                defaultValue={currentNumber}\n                onChange={handleChange}\n                className={css.phonebook__formContactInput}\n                />\n            <div className={css.buttonWrap}>\n            <button type=\"submit\" className={css.form__button} disabled={isAdd}>\n            {isAdd ? (<RotatingLinesSpinner/>) : ('Edit contact')}\n            </button>\n            </div>\n        </form>\n       \n        </>\n    \n    );\n\n\n    \n}\n\nexport default EditContactForm;\n\nEditContactForm.propTypes={\n  onCloseModal: PropTypes.func.isRequired,\n  currentId: PropTypes.string.isRequired,\n  currentName:  PropTypes.string.isRequired,\n  currentNumber: PropTypes.string.isRequired,\n\n}; ","// extracted by mini-css-extract-plugin\nexport default {\"buttonClose\":\"ButtonClose_buttonClose__wgjfl\",\"buttonCloseIcon\":\"ButtonClose_buttonCloseIcon__6SQ6C\"};","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-x-close\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.444 31.111c-0.711 0-1.422-0.178-1.956-0.711l-10.489-10.667-10.489 10.489c-1.067 1.067-2.667 1.067-3.733 0s-1.067-2.667 0-3.733l10.489-10.489-10.667-10.489c-1.067-1.067-1.067-2.667 0-3.733s2.667-1.067 3.733 0l10.667 10.489 10.489-10.489c1.067-1.067 2.667-1.067 3.733 0s1.067 2.667 0 3.733l-10.489 10.489 10.489 10.489c1.067 1.067 1.067 2.667 0 3.733-0.356 0.711-1.067 0.889-1.778 0.889z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.4a1de16e886a844401d275329ee76a1f.svg\";\nexport { ForwardRef as ReactComponent };","import css from './ButtonClose.module.css';\nimport sprite from '../../images/icons.svg';\n\nexport const ButtonClose =({onCloseModal})=>{\n\n    return ( \n        <>\n        <button type=\"button\" className={css.buttonClose} onClick={onCloseModal}>\n            <svg className={css.buttonCloseIcon}>\n            <use href={`${sprite}#icon-x-close`}></use>\n            </svg>\n        </button>\n        </>\n        \n    )\n}\n\n","import PropTypes from 'prop-types';\nimport css from './ContactsListItem.module.css';\nimport { useDispatch } from \"react-redux\";\nimport {deleteContact} from 'redux/contacts/operations';\nimport React, { useState } from 'react';\nimport Modal from '../Modal/Modal';\nimport EditContactForm from '../ContactForm/EditContactForm';\nimport { ButtonClose } from 'components/ButtonClose/ButtonClose';\nimport { RotatingLinesSpinner } from 'components/Spinner/RotatingLinesSpinner';\n\n\nconst ContactsListItem = ({contact:{id, name, number}}) => {\n    const [isDeleting, setIsDeleting] = useState(false);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const dispatch = useDispatch();\n\n    const handleDeleteContact = () => {\n        setIsDeleting(true);\n        dispatch(deleteContact(id));\n        setIsDeleting(false);\n    }\n  \n    const onOpenModal = () => {\n        setIsModalOpen(true);\n        window.addEventListener('keydown', onEscKeyPress);\n    \n    \n    };\n    \n    const onCloseModal = () => {\n    setIsModalOpen(false);\n    window.removeEventListener('keydown', onEscKeyPress);\n    \n    };\n    \n    const onEscKeyPress=(event)=> {\n        const ESC_KEY_CODE = 'Escape';\n        const isEscKey = event.code === ESC_KEY_CODE;\n        if (isEscKey) {\n            onCloseModal();\n        }\n    };\n\n    return (\n        <>\n        <div className={css.contactListItem__contactThumb}>\n            <p>{name}: </p>\n            <p>{number}</p>\n        </div>\n        <button\n        type=\"button\"\n        onClick={handleDeleteContact}\n        className={css.contactListItem__button}\n        \n        >\n        {isDeleting ? <RotatingLinesSpinner/>:'Delete'}\n       \n        </button>\n        <button\n        type=\"button\"\n        onClick={onOpenModal}\n        disabled={isDeleting}\n        className={css.contactListItem__button}\n        >\n       Edit\n        </button>\n        {isModalOpen && (\n        <Modal onCloseModal={onCloseModal} >\n          <ButtonClose onCloseModal={onCloseModal}/>\n          <EditContactForm onCloseModal={onCloseModal} currentId={id} currentName={name} currentNumber={number}/>\n        </Modal>\n        )} \n        </>\n    );                  \n};\n\nContactsListItem.propTypes={\n    contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        name:  PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }).isRequired,\n    ),\n\n}; \n\nexport default ContactsListItem;","// extracted by mini-css-extract-plugin\nexport default {\"contactList__wrap\":\"ContactList_contactList__wrap__qmFuP\",\"contactList__title\":\"ContactList_contactList__title__E15m2\",\"contactList__list\":\"ContactList_contactList__list__L6B7x\",\"contactList__item\":\"ContactList_contactList__item__w7IDj\"};","import ContactsListItem from '../ContactsListItem/ContactsListItem';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport {selectContactsState, selectFilterState} from '../../redux/contacts/selectors';\n\nconst ContactsList = ()=>{\n\n    const stateContacts=useSelector(selectContactsState);\n    const stateFilter=useSelector(selectFilterState);\n\n    const getVisibleContacts = () => {\n      const normalizedFilter = stateFilter.toLowerCase();\n\n      return stateContacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)).sort((firstContact, secondContact)=>firstContact.name.localeCompare(secondContact.name));\n   \n    };\n  \n   const visibleContacts = getVisibleContacts();\n\n\n    return (\n        <div className={css.contactList__wrap}>\n            <h2 className={css.contactList__title}>Contacts</h2>\n            <ul className={css.contactList__list}>\n                {visibleContacts.map(contact=>(\n                    <li key={contact.id} className={css.contactList__item}>\n                        <ContactsListItem contact={contact}/>\n                    </li>\n                \n                ))}\n            </ul>\n        </div>\n    )\n};\n\nexport default ContactsList;\n ","// extracted by mini-css-extract-plugin\nexport default {\"filter__wrap\":\"Filter_filter__wrap__DZxCY\",\"filter__input\":\"Filter_filter__input__toa89\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {setContactsFilter} from '../../redux/contacts/filterSlice';\nimport {selectFilterState} from '../../redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const stateFilter = useSelector(selectFilterState);\n\n  const changeFilter = (e) => {\n    dispatch(setContactsFilter(e.currentTarget.value));\n    \n  };\n\n  return (\n    <div className={css.filter__wrap}>\n      <label className={css.filter__label}>Find contacts by name </label>\n      <input type=\"text\" value={stateFilter} placeholder='search...' onChange={changeFilter} className={css.filter__input}/>\n      \n    </div>\n  );\n}\n\nexport default Filter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook__title\":\"Contacts_phonebook__title__ylLCu\",\"progressWrap\":\"Contacts_progressWrap__WHLPi\",\"wrap\":\"Contacts_wrap__-xpSk\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from \"redux/contacts/operations\";\nimport {selectContactsState} from 'redux/contacts/selectors';\n// import { selectIsAdding } from 'redux/contacts/selectors';\nimport {RotatingLinesSpinner} from '../Spinner/RotatingLinesSpinner';\nimport toast from 'react-hot-toast';\n\nconst AddContactForm = ({onCloseModal}) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const [isAdd, setIsAdd]=useState(false);\n\n    const dispatch = useDispatch();\n    const stateContacts=useSelector(selectContactsState);\n    // const isAdding = useSelector(selectIsAdding);\n\n   \n\n    // useEffect(()=>{\n    //   console.log(\"isAdding=\",isAdding);\n    // },[isAdding]);\n\n    const handleChange = evt => {\n        const { name, value } = evt.target;\n    \n        switch (name) {\n          case 'name':\n            setName(value);\n            break;\n    \n          case 'number':\n            setNumber(value);\n            break;\n    \n          default:\n            console.warn(`Тип поля name - ${name} не обрабатывается`);\n        }\n      };\n\n\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n\n        setIsAdd(true);\n\n        addContacts(name, number);\n        setIsAdd(false);\n\n        setName('');\n        setNumber('');\n        onCloseModal();\n    };\n \n\n    const addContacts = (name, number)=> {  \n        const normalizedName = name.toLowerCase();\n        const isInContacts=stateContacts.findIndex(({name})=>name.toLowerCase()===normalizedName );\n\n        if(isInContacts!==-1){\n          toast.error(`${name} is already in contacts`, {duration: 1000, position: 'top-center'});\n          \n        }\n        else{\n          const newContact={\n            name:name,\n            number:number,\n          }\n          dispatch(addContact(newContact));\n        }\n       \n    \n      };\n   \n    return(\n      <>\n      \n        <form onSubmit={handleSubmit} className={css.phonebook__formContact}>\n            <label className={css.phonebook__formContactLabel}>Name</label>\n            <input\n                type=\"name\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n                onChange={handleChange}\n                className={css.phonebook__formContactInput}\n                />\n            \n            <label className={css.phonebook__formContactLabel}>Number</label>\n            <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"^[0-9]+$\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                value={number}\n                onChange={handleChange}\n                className={css.phonebook__formContactInput}\n                />\n            <div className={css.buttonWrap}>\n            <button type=\"submit\" className={css.form__button} disabled={isAdd}>\n            {isAdd ? (<RotatingLinesSpinner/>) : ('Add contact')}\n            </button>\n            </div>\n        </form>\n        \n        </>\n    \n    );\n\n\n    \n}\n\nexport default AddContactForm;\n\nAddContactForm.propTypes={\n  onCloseModal: PropTypes.func.isRequired,\n\n}; \n\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ButtonModalAddContact_button__juOb3\"};","import Button from '@mui/material/Button';\nimport React, { useState } from 'react';\nimport Modal from '../Modal/Modal';\nimport AddContactForm from '../ContactForm/AddContactForm';\nimport { ButtonClose } from 'components/ButtonClose/ButtonClose';\nimport css from './ButtonModalAddContact.module.css';\n\nexport const ButtonModalAddContact = ()=>{\n    \n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const onOpenModal = () => {\n        setIsModalOpen(true);\n        window.addEventListener('keydown', onEscKeyPress);\n    \n    \n    };\n    \n    const onCloseModal = () => {\n    setIsModalOpen(false);\n    window.removeEventListener('keydown', onEscKeyPress);\n    \n    };\n    \n    const onEscKeyPress=(event)=> {\n        const ESC_KEY_CODE = 'Escape';\n        const isEscKey = event.code === ESC_KEY_CODE;\n        if (isEscKey) {\n            onCloseModal();\n        }\n    };\n\n\n    return (\n    <>\n        <Button variant=\"contained\" type=\"submit\" onClick={onOpenModal} className={css.button}>Add new contact</Button>\n        {isModalOpen && (\n        <Modal onCloseModal={onCloseModal} >\n          <ButtonClose onCloseModal={onCloseModal}/>\n          <AddContactForm onCloseModal={onCloseModal}/>\n        </Modal>\n        )} \n    </>\n    )\n}\n\n","import { Circles } from 'react-loader-spinner';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 160px;\n`;\n\nexport const CircleSpinner =()=>{\n\n    return (\n        <Container>\n        <Circles\n            height=\"80\"\n            width=\"80\"\n            color=\"#0b5394\"\n            ariaLabel=\"circles-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            />\n        </Container>\n        );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport Container from 'components/Container/Container';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport css from './Contacts.module.css';\nimport { ButtonModalAddContact } from 'components/ButtonModalAddContact/ButtonModalAddContact';\nimport {CircleSpinner} from 'components/Spinner/CircleSpinner';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      {isLoading ? (<CircleSpinner/>)\n      :(<><h1 className={css.phonebook__title}>Phonebook</h1>\n      <Container>\n        <div className={css.wrap}>\n        <Filter />\n        <ButtonModalAddContact/>\n        </div>\n        <ContactsList />\n       </Container></>)}\n    </>\n  );\n}\n\n\n"],"names":["RotatingLinesSpinner","_jsx","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","_ref","children","className","css","onCloseModal","createPortal","onClick","event","currentTarget","target","document","querySelector","selectContactsState","state","contacts","selectIsLoading","isLoading","selectFilterState","filter","value","currentId","currentName","currentNumber","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_useState5","_useState6","isAdd","setIsAdd","dispatch","useDispatch","stateContacts","useSelector","handleChange","evt","_evt$target","console","warn","concat","addContacts","normalizedName","toLowerCase","findIndex","_ref2","toast","duration","position","newContact","editContact","_Fragment","_jsxs","onSubmit","e","preventDefault","type","pattern","title","required","defaultValue","onChange","disabled","ButtonClose","href","sprite","_ref$contact","contact","id","isDeleting","setIsDeleting","isModalOpen","setIsModalOpen","window","removeEventListener","onEscKeyPress","code","deleteContact","addEventListener","Modal","EditContactForm","stateFilter","visibleContacts","normalizedFilter","includes","sort","firstContact","secondContact","localeCompare","getVisibleContacts","map","ContactsListItem","placeholder","setContactsFilter","addContact","ButtonModalAddContact","Button","variant","AddContactForm","Container","styled","_templateObject","_taggedTemplateLiteral","CircleSpinner","Circles","height","color","ariaLabel","wrapperStyle","wrapperClass","Contacts","useEffect","fetchContacts","Helmet","Filter","ContactsList"],"sourceRoot":""}